# Операция умножения двух матриц А и В представляет собой вычисление результирующей матрицы С, где каждый элемент C(ij) равен сумме произведений элементов в соответствующей строке первой матрицы A(ik) и элементов в столбце второй матрицы B(kj).

# Две матрицы можно перемножать только в том случае, если количество столбцов в первой матрице совпадает с количеством строк во второй матрице. Это значит, что первая матрица обязательно должна быть согласованной со второй матрицей. В результате операции умножения матрицы размера M×N на матрицу размером N×K является матрица размером M×K.

# src/solution.py

# Реализуйте функцию multiply(), которая принимает две матрицы и возвращает новую матрицу — результат их произведения:

# from solution import multiply
# A = [[1, 2], [3, 2]]
# B = [[3, 2], [1, 1]]
# multiply(A, B)  # [[5, 4], [11, 8]]
# C = [
#   [2, 5],
#   [6, 7],
#   [1, 8],
# ]
# D = [
#   [1, 2, 1],
#   [0, 1, 0],
# ]
# multiply(C, D)  # [[2, 9, 2], [6, 19, 6], [1, 10, 1]]

def multiply(A, B):
    # Проверка, что матрицы могут быть перемножены
    if len(A[0]) != len(B):
        raise ValueError("Нельзя умножить матрицы: неправильные размеры")

    # Создаем пустую матрицу C размером MxK, где M - количество строк в A, K - количество столбцов в B
    M = len(A)
    K = len(B[0])
    C = [[0] * K for _ in range(M)]

    # Выполняем умножение матриц
    for i in range(M):
        for j in range(K):
            # Вычисляем значение для C[i][j]
            for k in range(len(A[0])):
                C[i][j] += A[i][k] * B[k][j]

    return C

# Примеры использования
A = [[1, 2], [3, 2]]
B = [[3, 2], [1, 1]]
result1 = multiply(A, B)
print(result1)  # [[5, 4], [11, 8]]

C = [[2, 5], [6, 7], [1, 8]]
D = [[1, 2, 1], [0, 1, 0]]
result2 = multiply(C, D)
print(result2)  # [[2, 9, 2], [6, 19, 6], [1, 10, 1]]
